// syntax = "proto3";

// package products;

// import "google/protobuf/timestamp.proto";

// // Products service
// service ProductsService {
//   rpc GetProducts(GetProductsRequest) returns (GetProductsResponse);
//   rpc GetRecentProducts(GetRecentProductsRequest) returns (GetProductsResponse);
//   rpc GetByIdList(GetByIdListRequest) returns (GetByIdListResponse);
// }

// // Product type enum
// enum ProductType {
//   PRODUCT = 0;
//   SERVICE = 1;
// }

// // Currency symbol enum
// enum CurrencySymbol {
//   RS = 0;
//   USD = 1;
//   EUR = 2;
// }

// // Product option
// message ProductOption {
//   string attribute = 1;
//   repeated string value = 2;
// }

// // Expiry time
// message ExpiryTime {
//   int32 date = 1;
//   int32 month = 2;
//   int32 year = 3;
//   int32 week = 4;           // ðŸ”¹ Added from schema
//   bool lifetime = 5;        // ðŸ”¹ Added from schema
// }

// // Additional details
// message AdditionalDetail {
//   string title = 1;
//   string details = 2;
// }

// // Product feature
// message ProductFeature {
//   string title = 1;
// }

// // Link or referral
// message LinkOrReferral {
//   string title = 1;
// }

// // Variant message ðŸ”¹ New from schema
// message Variant {
//   map<string, string> attributes = 1;               // attributes map
//   bool stock = 2;                                   // ðŸ”¹
//   double sellingPrice = 3;                          // ðŸ”¹
//   repeated string media_related_to_varient = 4;     // ðŸ”¹
//   double mrp = 5;                                   // ðŸ”¹
//   bool varientIsActive = 6;                         // ðŸ”¹
//   google.protobuf.Timestamp createdAt = 7;          // ðŸ”¹
//   google.protobuf.Timestamp updatedAt = 8;          // ðŸ”¹
// }


// message Category {
//   string id = 1;
//   string name = 2;
//   string parent_id = 3;         // Optional: parent category
//   repeated string path = 4;     // Path of category ids
//   string image_url = 5;
//   bool active = 6;
// }



// // Product message
// message Product {
//   string id = 1;
//   string name = 2;
//   ProductType type = 3;
//   CurrencySymbol symbol = 4;
//   string description = 5;
//   string brand = 6;
//   repeated ProductOption options = 7;
//   repeated string media = 8;
//   repeated string video_url = 9;
//   Category category = 10;
//   string product_warranty = 11;
//   bool is_returnable = 12;
//   int32 returning_day = 13;
//   bool is_published = 14;
//   double mrp_per_unit = 15;

//   repeated string guideLine = 16;
//   repeated AdditionalDetail add_more_details = 17;
//   repeated ProductFeature add_product_features = 18;
//   LinkOrReferral link_or_referral_website = 19;
//   string created_by_business = 20;
//   string updated_by_business = 21;
//   bool addedByAdmin = 22;

//   repeated Variant variants = 23;

//   // Approval/Rejection fields
//   string approval_status = 24;
//   string approved_by = 25;
//   google.protobuf.Timestamp approved_at = 26;
//   string approval_reason = 27;
//   string rejected_by = 28;
//   google.protobuf.Timestamp rejected_at = 29;
//   string rejection_reason = 30;

//   google.protobuf.Timestamp created_at = 31;
//   google.protobuf.Timestamp updated_at = 32;
//   google.protobuf.Timestamp deleted_at = 33;

//   // ðŸ”¹ Expiry duration added from schema
//   string expiry_duration = 34;  
// }

// // Request to get products
// message GetProductsRequest {
//   repeated string product_ids = 1;
//   string cursor = 2;
//   int32 limit = 3;
//   string created_by_business = 4;
//   ProductType type = 5;
//   bool is_published = 6;
// }

// // Response containing products
// message GetProductsResponse {
//   repeated Product products = 1;
//   int32 total = 2;
//   string next_cursor = 3;
//   bool has_more = 4;
// }

// // Request to get recent products
// message GetRecentProductsRequest {
//   string cursor = 1;
//   int32 limit = 2;
//   repeated ProductType types = 3;
//   bool is_published = 4;
// }

// // Request to get products by ID list
// message GetByIdListRequest {
//   repeated string product_id_list = 1;
// }

// // Response for ID list request
// message GetByIdListResponse {
//   repeated Product products = 1;
// }



syntax = "proto3";

package products;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto"; // âœ… For nested attributes

// Products service
service ProductsService {
  rpc GetProducts(GetProductsRequest) returns (GetProductsResponse);
  rpc GetRecentProducts(GetRecentProductsRequest) returns (GetProductsResponse);
  rpc GetByIdList(GetByIdListRequest) returns (GetByIdListResponse);
}

// Product type enum
enum ProductType {
  PRODUCT = 0;
  SERVICE = 1;
}

// Currency symbol enum
enum CurrencySymbol {
  RS = 0;
  USD = 1;
  EUR = 2;
}

// Product option
message ProductOption {
  string attribute = 1;
  repeated string value = 2;
}

// Expiry time
message ExpiryTime {
  int32 date = 1;
  int32 month = 2;
  int32 year = 3;
  int32 week = 4;           
  bool lifetime = 5;        
}

// Additional details
message AdditionalDetail {
  string title = 1;
  string details = 2;
}

// Product feature
message ProductFeature {
  string title = 1;
}

// Link or referral
message LinkOrReferral {
  string title = 1;
}

// Variant message
message Variant {
  google.protobuf.Struct attributes = 1;           // âœ… Nested attributes map
  bool stock = 2;                                  
  double sellingPrice = 3;                         
  repeated string media_related_to_varient = 4;    
  double mrp = 5;                                  
  bool varientIsActive = 6;                        
  google.protobuf.Timestamp createdAt = 7;         
  google.protobuf.Timestamp updatedAt = 8;         
}

// Category
message Category {
  string id = 1;
  string name = 2;
  string parent_id = 3;
  repeated string path = 4;
  string image_url = 5;
  bool active = 6;
}

// Product message
message Product {
  string id = 1;
  string name = 2;
  ProductType type = 3;
  CurrencySymbol symbol = 4;
  string description = 5;
  string brand = 6;
  repeated ProductOption options = 7;
  repeated string media = 8;
  repeated string video_url = 9;
  Category category = 10;
  string product_warranty = 11;
  bool is_returnable = 12;
  int32 returning_day = 13;
  bool is_published = 14;
  double mrp_per_unit = 15;
  repeated string guideLine = 16;
  repeated AdditionalDetail add_more_details = 17;
  repeated ProductFeature add_product_features = 18;
  LinkOrReferral link_or_referral_website = 19;
  string created_by_business = 20;
  string updated_by_business = 21;
  bool addedByAdmin = 22;
  repeated Variant variants = 23;

  // Approval/Rejection fields
  string approval_status = 24;
  string approved_by = 25;
  google.protobuf.Timestamp approved_at = 26;
  string approval_reason = 27;
  string rejected_by = 28;
  google.protobuf.Timestamp rejected_at = 29;
  string rejection_reason = 30;

  google.protobuf.Timestamp created_at = 31;
  google.protobuf.Timestamp updated_at = 32;
  google.protobuf.Timestamp deleted_at = 33;

  // Expiry duration
  string expiry_duration = 34;  
}

// Requests & Responses
message GetProductsRequest {
  repeated string product_ids = 1;
  string cursor = 2;
  int32 limit = 3;
  string created_by_business = 4;
  ProductType type = 5;
  bool is_published = 6;
}

message GetProductsResponse {
  repeated Product products = 1;
  int32 total = 2;
  string next_cursor = 3;
  bool has_more = 4;
}

message GetRecentProductsRequest {
  string cursor = 1;
  int32 limit = 2;
  repeated ProductType types = 3;
  bool is_published = 4;
}

message GetByIdListRequest {
  repeated string product_id_list = 1;
}

message GetByIdListResponse {
  repeated Product products = 1;
}
